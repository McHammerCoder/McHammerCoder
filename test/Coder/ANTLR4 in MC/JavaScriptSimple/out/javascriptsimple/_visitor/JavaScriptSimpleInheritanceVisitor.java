/* generated from model null*/
/* generated by template visitor.InheritanceVisitor*/



package javascriptsimple._visitor;

import javascriptsimple._ast.ASTJavaScriptSimpleNode;

import de.monticore.ast.ASTNode;

/**
 * Visitor for the {@code JavaScriptSimple} language that visits super
 * types of the AST nodes as well.
 *
 * @see JavaScriptSimpleVisitor
 * @see ASTJavaScriptSimpleNode#accept(JavaScriptSimpleVisitor visitor)
 */
 public interface JavaScriptSimpleInheritanceVisitor extends JavaScriptSimpleVisitor  {


      default public void handle(javascriptsimple._ast.ASTJavaScriptProgram node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTSourceElements node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTSourceElement node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTStatement node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTStatements node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTVariableStatement node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTVariableDeclarations node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTVariableDeclaration node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTInitialiser node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTExpressionSequence node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTSingleExpression node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTLiteral node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTNumericLiteral node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTEOS node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTJavaScriptProgramList node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTSourceElementsList node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTSourceElementList node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTStatementList node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTStatementsList node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTVariableStatementList node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTVariableDeclarationsList node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTVariableDeclarationList node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTInitialiserList node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTExpressionSequenceList node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTSingleExpressionList node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTLiteralList node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTNumericLiteralList node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTEOSList node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(javascriptsimple._ast.ASTJavaScriptSimpleNode node) {
        getRealThis().visit((ASTNode) node);
        JavaScriptSimpleVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

}
