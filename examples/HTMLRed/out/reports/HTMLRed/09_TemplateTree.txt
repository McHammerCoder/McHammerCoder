========================================================== Protocol
OP set value (key, value): 
OP set value (key, value): 
+--Parser.ftl
|  +--ParserHeader.ftl
|  +--LexerMember.ftl
OP set value (key, value): 
OP set value (key, value): 
+--MCParser.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
OP set value (key, value): 
+--Parser.ftl
+--Actions.ftl
+--HAParseTree.ftl
+--HARuleContext.ftl
+--HARuleNode.ftl
+--HATerminalNode.ftl
+--TreeConverter.ftl
+--TreeHelper.ftl
+--com_upstandinghackers_hammer_Hammer.ftl
OP set value (key, value): 
OP set value (key, value): 
OP set value (key, value): 
+--ModelingLanguage.ftl
+--ModelLoader.ftl
OP set value (key, value): 
OP set value (key, value): 
OP set value (key, value): 
+--AstClass.ftl
|  +--AstImports.ftl
|  +--AstSuperTypes.ftl
|  |  +--AstSuperInterfaces.ftl
|  +--Attribute.ftl
|  +--Attribute.ftl
|  +--Attribute.ftl
|  +--Constructor.ftl
|  |  +--ParametersDeclaration.ftl
|  |  +--EmptyMethodBody.ftl
|  +--Constructor.ftl
|  |  +--ATHP: ConstructorParametersDeclaration.ftl
|  |  +--ConstructorParametersDeclaration.ftl
|  |  |  +--inst: TypesHelper
|  |  +--ATHP: ConstructorAttributesSetter.ftl
|  |  +--ConstructorAttributesSetter.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Accept.ftl
|  |  +--Accept.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: DeepEqualsWithOrder.ftl
|  |  +--DeepEqualsWithOrder.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return deepEquals(o, true); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: DeepEqualsWithComments.ftl
|  |  +--DeepEqualsWithComments.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return deepEqualsWithComments(o, true); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: EqualAttributes.ftl
|  |  +--EqualAttributes.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: EqualsWithComments.ftl
|  |  +--EqualsWithComments.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: GetChildren.ftl
|  |  +--GetChildren.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: RemoveChild.ftl
|  |  +--RemoveChild.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return new Builder(); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return deepClone(_construct()); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: DeepCloneWithParameters.ftl
|  |  +--DeepCloneWithParameters.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return new ASTP(); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ASHP: ""
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: " return symbol.isPresent(); "
|  +--ClassMethod.ftl
|  |  +--ASHP: ""
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: " return enclosingScope.isPresent(); "
|  +--ClassContent.ftl
|  +--AstBuilder.ftl
|  |  +--BuilderAttribute.ftl
|  |  |  +--inst: TypesHelper
|  |  +--ATHP: BuilderConstructorParametersDeclaration.ftl
|  |  +--BuilderConstructorParametersDeclaration.ftl
|  |  +--AstBuilderAttributeSetter.ftl
|  |  |  +--inst: TypesHelper
+--AstClass.ftl
|  +--AstImports.ftl
|  +--AstSuperTypes.ftl
|  |  +--AstSuperInterfaces.ftl
|  +--Attribute.ftl
|  +--Attribute.ftl
|  +--Attribute.ftl
|  +--Attribute.ftl
|  +--Attribute.ftl
|  +--Attribute.ftl
|  +--Constructor.ftl
|  |  +--ParametersDeclaration.ftl
|  |  +--EmptyMethodBody.ftl
|  +--Constructor.ftl
|  |  +--ATHP: ConstructorParametersDeclaration.ftl
|  |  +--ConstructorParametersDeclaration.ftl
|  |  |  +--inst: TypesHelper
|  |  +--ATHP: ConstructorAttributesSetter.ftl
|  |  +--ConstructorAttributesSetter.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Accept.ftl
|  |  +--Accept.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: DeepEqualsWithOrder.ftl
|  |  +--DeepEqualsWithOrder.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return deepEquals(o, true); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: DeepEqualsWithComments.ftl
|  |  +--DeepEqualsWithComments.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return deepEqualsWithComments(o, true); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: EqualAttributes.ftl
|  |  +--EqualAttributes.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: EqualsWithComments.ftl
|  |  +--EqualsWithComments.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: GetChildren.ftl
|  |  +--GetChildren.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: RemoveChild.ftl
|  |  +--RemoveChild.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return new Builder(); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return deepClone(_construct()); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: DeepCloneWithParameters.ftl
|  |  +--DeepCloneWithParameters.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return new ASTAlternatives(); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ASHP: ""
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: " return p.isPresent(); "
|  +--ClassMethod.ftl
|  |  +--ASHP: ""
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: " return b.isPresent(); "
|  +--ClassMethod.ftl
|  |  +--ASHP: ""
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: " return i.isPresent(); "
|  +--ClassMethod.ftl
|  |  +--ASHP: ""
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: " return tEXTB.isPresent(); "
|  +--ClassMethod.ftl
|  |  +--ASHP: ""
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: " return symbol.isPresent(); "
|  +--ClassMethod.ftl
|  |  +--ASHP: ""
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: " return enclosingScope.isPresent(); "
|  +--ClassContent.ftl
|  +--AstBuilder.ftl
|  |  +--BuilderAttribute.ftl
|  |  |  +--inst: TypesHelper
|  |  +--BuilderAttribute.ftl
|  |  |  +--inst: TypesHelper
|  |  +--BuilderAttribute.ftl
|  |  |  +--inst: TypesHelper
|  |  +--BuilderAttribute.ftl
|  |  |  +--inst: TypesHelper
|  |  +--ATHP: BuilderConstructorParametersDeclaration.ftl
|  |  +--BuilderConstructorParametersDeclaration.ftl
|  |  +--AstBuilderAttributeSetter.ftl
|  |  |  +--inst: TypesHelper
|  |  +--AstBuilderAttributeSetter.ftl
|  |  |  +--inst: TypesHelper
|  |  +--AstBuilderAttributeSetter.ftl
|  |  |  +--inst: TypesHelper
|  |  +--AstBuilderAttributeSetter.ftl
|  |  |  +--inst: TypesHelper
+--AstClass.ftl
|  +--AstImports.ftl
|  +--AstSuperTypes.ftl
|  |  +--AstSuperInterfaces.ftl
|  +--Attribute.ftl
|  +--Attribute.ftl
|  +--Attribute.ftl
|  +--Constructor.ftl
|  |  +--ParametersDeclaration.ftl
|  |  +--EmptyMethodBody.ftl
|  +--Constructor.ftl
|  |  +--ATHP: ConstructorParametersDeclaration.ftl
|  |  +--ConstructorParametersDeclaration.ftl
|  |  |  +--inst: TypesHelper
|  |  +--ATHP: ConstructorAttributesSetter.ftl
|  |  +--ConstructorAttributesSetter.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Accept.ftl
|  |  +--Accept.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: DeepEqualsWithOrder.ftl
|  |  +--DeepEqualsWithOrder.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return deepEquals(o, true); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: DeepEqualsWithComments.ftl
|  |  +--DeepEqualsWithComments.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return deepEqualsWithComments(o, true); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: EqualAttributes.ftl
|  |  +--EqualAttributes.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: EqualsWithComments.ftl
|  |  +--EqualsWithComments.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: GetChildren.ftl
|  |  +--GetChildren.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: RemoveChild.ftl
|  |  +--RemoveChild.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return new Builder(); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return deepClone(_construct()); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: DeepCloneWithParameters.ftl
|  |  +--DeepCloneWithParameters.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return new ASTB(); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ASHP: ""
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: " return symbol.isPresent(); "
|  +--ClassMethod.ftl
|  |  +--ASHP: ""
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: " return enclosingScope.isPresent(); "
|  +--ClassContent.ftl
|  +--AstBuilder.ftl
|  |  +--BuilderAttribute.ftl
|  |  |  +--inst: TypesHelper
|  |  +--ATHP: BuilderConstructorParametersDeclaration.ftl
|  |  +--BuilderConstructorParametersDeclaration.ftl
|  |  +--AstBuilderAttributeSetter.ftl
|  |  |  +--inst: TypesHelper
+--AstClass.ftl
|  +--AstImports.ftl
|  +--AstSuperTypes.ftl
|  |  +--AstSuperInterfaces.ftl
|  +--Attribute.ftl
|  +--Attribute.ftl
|  +--Attribute.ftl
|  +--Constructor.ftl
|  |  +--ParametersDeclaration.ftl
|  |  +--EmptyMethodBody.ftl
|  +--Constructor.ftl
|  |  +--ATHP: ConstructorParametersDeclaration.ftl
|  |  +--ConstructorParametersDeclaration.ftl
|  |  |  +--inst: TypesHelper
|  |  +--ATHP: ConstructorAttributesSetter.ftl
|  |  +--ConstructorAttributesSetter.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Accept.ftl
|  |  +--Accept.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: DeepEqualsWithOrder.ftl
|  |  +--DeepEqualsWithOrder.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return deepEquals(o, true); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: DeepEqualsWithComments.ftl
|  |  +--DeepEqualsWithComments.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return deepEqualsWithComments(o, true); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: EqualAttributes.ftl
|  |  +--EqualAttributes.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: EqualsWithComments.ftl
|  |  +--EqualsWithComments.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: GetChildren.ftl
|  |  +--GetChildren.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: RemoveChild.ftl
|  |  +--RemoveChild.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return new Builder(); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return deepClone(_construct()); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: DeepCloneWithParameters.ftl
|  |  +--DeepCloneWithParameters.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: "return new ASTI(); "
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ASHP: ""
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: " return symbol.isPresent(); "
|  +--ClassMethod.ftl
|  |  +--ASHP: ""
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--ClassMethod.ftl
|  |  +--ErrorIfNull.ftl
|  |  +--ASHP: " return enclosingScope.isPresent(); "
|  +--ClassContent.ftl
|  +--AstBuilder.ftl
|  |  +--BuilderAttribute.ftl
|  |  |  +--inst: TypesHelper
|  |  +--ATHP: BuilderConstructorParametersDeclaration.ftl
|  |  +--BuilderConstructorParametersDeclaration.ftl
|  |  +--AstBuilderAttributeSetter.ftl
|  |  |  +--inst: TypesHelper
+--Class.ftl
|  +--ATHP: AstNodeFactory.ftl
|  +--AstNodeFactory.ftl
|  |  +--Attribute.ftl
|  |  +--Attribute.ftl
|  |  +--Attribute.ftl
|  |  +--Attribute.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: Create.ftl
|  |  |  +--Create.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: DoCreate.ftl
|  |  |  +--DoCreate.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: CreateWithParams.ftl
|  |  |  +--CreateWithParams.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: DoCreateWithParams.ftl
|  |  |  +--DoCreateWithParams.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: Create.ftl
|  |  |  +--Create.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: DoCreate.ftl
|  |  |  +--DoCreate.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ATHP: ErrorIfNull.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: CreateWithParams.ftl
|  |  |  +--CreateWithParams.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ATHP: ErrorIfNull.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: DoCreateWithParams.ftl
|  |  |  +--DoCreateWithParams.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: Create.ftl
|  |  |  +--Create.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: DoCreate.ftl
|  |  |  +--DoCreate.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: CreateWithParams.ftl
|  |  |  +--CreateWithParams.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: DoCreateWithParams.ftl
|  |  |  +--DoCreateWithParams.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: Create.ftl
|  |  |  +--Create.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: DoCreate.ftl
|  |  |  +--DoCreate.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: CreateWithParams.ftl
|  |  |  +--CreateWithParams.ftl
|  |  +--ClassMethod.ftl
|  |  |  +--ErrorIfNull.ftl
|  |  |  +--ATHP: DoCreateWithParams.ftl
|  |  |  +--DoCreateWithParams.ftl
+--Class.ftl
|  +--ATHP: ASTConstantsClass.ftl
|  +--ASTConstantsClass.ftl
+--AstInterface.ftl
|  +--ATHP: ASTNodeBase.ftl
|  +--ASTNodeBase.ftl
OP set value (key, value): 
+--SimpleVisitor.ftl
+--InheritanceVisitor.ftl
+--ParentAwareVisitor.ftl
+--DelegatorVisitor.ftl
+--CommonDelegatorVisitor.ftl
OP set value (key, value): 
+--CoCoInterface.ftl
+--CoCoInterface.ftl
+--CoCoInterface.ftl
+--CoCoInterface.ftl
+--CoCoInterface.ftl
+--CoCoChecker.ftl
OP set value (key, value): 
+--DiagramVisitor.ftl
OP set value (key, value): 
+--Decoder.ftl
+--DecoderVisitor.ftl
+--Encoder.ftl
+--EncoderVisitor.ftl
+--Injector.ftl
+--Range.ftl
+--Tool.ftl
========================================================== Explanation
Tree structure for template calls.
Short forms:
  +--      template call
  +--SHP   StringHookPoint call
  +--CHP   CodeHookPoint call
  +--ASHP  AST StringHookPoint call
  +--ATHP  AST TemplateHookPoint call
  +--ACHP  AST CodeHookPoint call
  +inst    instantiation of java class
(EOF)
