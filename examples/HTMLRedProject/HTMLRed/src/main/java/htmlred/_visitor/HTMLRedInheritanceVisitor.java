/* generated from model null*/
/* generated by template visitor.InheritanceVisitor*/



package htmlred._visitor;

import htmlred._ast.ASTHTMLRedNode;

import de.monticore.ast.ASTNode;

/**
 * Visitor for the {@code HTMLRed} language that visits super
 * types of the AST nodes as well.
 *
 * @see HTMLRedVisitor
 * @see ASTHTMLRedNode#accept(HTMLRedVisitor visitor)
 */
 public interface HTMLRedInheritanceVisitor extends HTMLRedVisitor  {


      default public void handle(htmlred._ast.ASTP node) {
        getRealThis().visit((ASTNode) node);
        HTMLRedVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(htmlred._ast.ASTAlternatives node) {
        getRealThis().visit((ASTNode) node);
        HTMLRedVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(htmlred._ast.ASTB node) {
        getRealThis().visit((ASTNode) node);
        HTMLRedVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(htmlred._ast.ASTI node) {
        getRealThis().visit((ASTNode) node);
        HTMLRedVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

      default public void handle(htmlred._ast.ASTHTMLRedNode node) {
        getRealThis().visit((ASTNode) node);
        HTMLRedVisitor.super.handle(node);
        getRealThis().endVisit((ASTNode) node);
      }

}
